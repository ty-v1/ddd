openapi: 3.0.3
info:
  title: DDD
  description: Title
  version: 1.0.0
paths:
  /projects:
    post:
      summary: プロジェクトの作成
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
            examples: {}
      responses:
        '200':
          description: 成功時
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
  '/projects/{projectId}':
    get:
      parameters:
        - in: path
          name: projectId
          schema:
            type: string
          required: true
          description: プロジェクトID
      summary: プロジェクト取得(1件)
      responses:
        '200':
          description: 成功時
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
              examples: {}
    put:
      parameters:
        - in: path
          name: projectId
          schema:
            type: string
          required: true
          description: プロジェクトID
      summary: プロジェクトの更新
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
      responses:
        '200':
          description: 成功時
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
    delete:
      parameters:
        - in: path
          name: projectId
          schema:
            type: string
          required: true
          description: プロジェクトID
      summary: プロジェクトの削除
      responses:
        '204':
          description: 成功時
  '/projects/{projectId}/labels/':
    post:
      summary: ラベルの作成
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLabelRequest'
      responses:
        '200':
          description: 成功時
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResponse'
    parameters:
      - schema:
          type: string
        name: projectId
        in: path
        required: true
        description: プロジェクトID
  '/projects/{projectId}/labels/{labelId}':
    put:
      parameters:
        - in: path
          name: labelId
          schema:
            type: string
          required: true
          description: ラベルID
      summary: ラベルの更新
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLabelRequest'
            examples: {}
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
      responses:
        '200':
          description: 成功時
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelResponse'
    delete:
      parameters:
        - in: path
          name: labelId
          schema:
            type: string
          required: true
          description: ラベルID
      summary: ラベルの削除
      responses:
        '204':
          description: 成功時
    parameters:
      - schema:
          type: string
        name: projectId
        in: path
        required: true
        description: プロジェクトID
      - schema:
          type: string
        name: labelId
        in: path
        required: true
        description: ラベルID
  '/projects/{projectId}/tasks/':
    post:
      summary: タスクの作成
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
      responses:
        '200':
          description: 成功時
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
    parameters:
      - schema:
          type: string
        name: projectId
        in: path
        required: true
        description: プロジェクトID
  '/projects/{projectId}/tasks/{taskId}':
    put:
      parameters:
        - in: path
          name: taskId
          schema:
            type: string
          required: true
          description: タスクID
      summary: タスクの更新
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
      responses:
        '200':
          description: 成功時
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
    delete:
      parameters:
        - in: path
          name: taskId
          schema:
            type: string
          required: true
          description: タスクID
      summary: タスクの削除
      responses:
        '204':
          description: 成功時
    parameters:
      - schema:
          type: string
        name: projectId
        in: path
        required: true
        description: プロジェクトID
      - schema:
          type: string
        name: taskId
        in: path
        required: true
        description: タスクID
  '/tasks/{taskId}/start_timer': {}
  '/tasks/{taskId}/suspend_timer': {}
components:
  schemas:
    CreateProjectRequest:
      type: object
      required:
        - description
        - name
      properties:
        name:
          type: string
          maxLength: 128
          description: プロジェクト名
        description:
          type: string
          maxLength: 256
          description: プロジェクトの説明
    UpdateProjectRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 128
          description: プロジェクト名
        description:
          type: string
          maxLength: 256
          description: プロジェクトの説明
    ProjectResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 01FBBSWQX4EKDJ4VQHFNBCRPZQ
        name:
          type: string
          example: MyWebApp
        description:
          type: string
          example: 自作Webアプリ
        createDateTime:
          type: string
          example: '2021-01-01T11:00:00'
        updateDateTime:
          type: string
          example: '2021-01-01T11:00:00'
      required:
        - id
        - name
        - description
        - createDateTime
        - updateDateTime
    CreateLabelRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 32
          description: ラベル名
        description:
          type: string
          maxLength: 512
          description: ラベルの説明
        color:
          type: string
      required:
        - name
        - color
    UpdateLabelRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 32
          description: ラベル名
        description:
          type: string
          maxLength: 512
          description: ラベルの説明
        color:
          type: string
          description: ラベルの色(RGB形式)
          example: null
    LabelResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 01FBBSWQX4EKDJ4VQHFNBCRPZQ
        name:
          type: string
          example: bug
        description:
          type: string
          example: bug
        color:
          type: string
          example: null
      required:
        - id
        - name
        - description
        - color
    CreateTaskRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 32
          description: タスク名
        description:
          type: string
          maxLength: 512
          description: タスクの説明
        estimatedTime:
          type: string
          description: 見積もり時間
          example: '01:00'
        labelIds:
          type: array
          description: ラベル一覧
          items:
            type: string
            format: uuid
      required:
        - name
        - description
        - estimatedTime
        - labelIds
    UpdateTaskRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 32
          description: タスク名
        description:
          type: string
          maxLength: 512
          description: タスクの説明
        estimatedTime:
          type: string
          description: 見積もり時間
          example: '01:00'
        labelIds:
          type: array
          description: ラベル一覧
          items:
            type: string
            format: uuid
    TaskResponse:
      type: object
      required:
        - name
        - description
        - projectId
        - labelIds
        - status
        - estimatedTime
        - elapsedTime
        - createDateTime
      properties:
        name:
          type: string
          maxLength: 32
          description: タスク名
        description:
          type: string
          maxLength: 512
          description: タスクの説明
        projectId:
          type: string
          format: uuid
          description: プロジェクトのID
        estimatedTime:
          type: string
          format: uuid
          description: 見積もり時間
          example: '01:00'
        elapsedTime:
          type: string
          format: uuid
          description: 計測時間
          example: '01:00'
        labelIds:
          type: array
          description: ラベル一覧
          items:
            type: string
            format: uuid
    SuspendTimerResponse:
      type: object
      required:
        - elapsedTime
      properties:
        elapsedTime:
          type: string
          format: uuid
          description: 計測時間
          example: '01:00'
